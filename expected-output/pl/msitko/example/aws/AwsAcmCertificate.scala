/**
  * This file has been generated by terraform4s at 2020-01-15T00:00:00Z
  * Terraform version: 0.12.19
  * Terraform provider name: aws
  * Terraform provider version: 2.43.0
  */
package pl.msitko.example.aws

import pl.msitko.terraform4s._

final case class Anonymous0(
    domainName: String,
    resourceRecordName: String,
    resourceRecordType: String,
    resourceRecordValue: String)

final case class AwsAcmCertificateOut(
    domainName: Val[String],
    id: Val[String],
    subjectAlternativeNames: Val[List[String]],
    validationMethod: Val[String],
    certificateAuthorityArn: Val[Option[String]],
    certificateBody: Val[Option[String]],
    certificateChain: Val[Option[String]],
    privateKey: Val[Option[String]],
    tags: Val[Option[Map[String, String]]],
    arn: Val[String],
    domainValidationOptions: Val[List[Anonymous0]],
    validationEmails: Val[List[String]])

final case class AwsAcmCertificate(
    domainName: Option[Val[String]],
    id: Option[Val[String]],
    subjectAlternativeNames: Option[Val[List[String]]],
    validationMethod: Option[Val[String]],
    certificateAuthorityArn: Option[Val[String]],
    certificateBody: Option[Val[String]],
    certificateChain: Option[Val[String]],
    privateKey: Option[Val[String]],
    tags: Option[Val[Map[String, String]]])(implicit r: ProvidersRoot)
    extends Resource[AwsAcmCertificateOut](r) {

  override def out =
    AwsAcmCertificateOut(
      OutStringVal(schemaName, resourceName, "domainName"),
      OutStringVal(schemaName, resourceName, "id"),
      OutVal[List[String]](schemaName, resourceName, "subjectAlternativeNames"),
      OutStringVal(schemaName, resourceName, "validationMethod"),
      OutVal[Option[String]](schemaName, resourceName, "certificateAuthorityArn"),
      OutVal[Option[String]](schemaName, resourceName, "certificateBody"),
      OutVal[Option[String]](schemaName, resourceName, "certificateChain"),
      OutVal[Option[String]](schemaName, resourceName, "privateKey"),
      OutVal[Option[Map[String, String]]](schemaName, resourceName, "tags"),
      OutStringVal(schemaName, resourceName, "arn"),
      OutVal[List[Anonymous0]](schemaName, resourceName, "domainValidationOptions"),
      OutVal[List[String]](schemaName, resourceName, "validationEmails"))
  override def fields: List[Field] = List()

  override def optionalFields: List[Option[Field]] =
    List(
      domainName.map(i => Field("domainName", i)),
      id.map(i => Field("id", i)),
      subjectAlternativeNames.map(i => Field("subjectAlternativeNames", i)),
      validationMethod.map(i => Field("validationMethod", i)),
      certificateAuthorityArn.map(i => Field("certificateAuthorityArn", i)),
      certificateBody.map(i => Field("certificateBody", i)),
      certificateChain.map(i => Field("certificateChain", i)),
      privateKey.map(i => Field("privateKey", i)),
      tags.map(i => Field("tags", i)))
  override def schemaName: String = "AwsAcmCertificate"
}
